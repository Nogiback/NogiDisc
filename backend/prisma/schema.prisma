// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @unique @default(cuid())
  firstName    String
  lastName     String
  profilePic   String?        @default("https://www.shutterstock.com/image-vector/default-avatar-profile-icon-transparent-600nw-2463868853.jpg")
  password     String
  email        String         @unique
  googleID     String?        @unique
  inventory    Disc[]
  bags         Bag[]
  createdAt    DateTime?      @default(now())
  updatedAt    DateTime?      @default(now()) @updatedAt
  RefreshToken RefreshToken[]
}

model Disc {
  id        String    @id @unique @default(cuid())
  user      User      @relation(fields: [userID], references: [id])
  bag       Bag?      @relation(fields: [bagID], references: [id])
  brand     String
  name      String
  weight    Int
  category  String
  plastic   String
  colour    String?   @default("#FFFFFF")
  speed     Float
  glide     Float
  turn      Float
  fade      Float
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  userID    String
  bagID     String?
}

model Bag {
  id        String    @id @unique @default(cuid())
  name      String?   @unique
  discs     Disc[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  User      User?     @relation(fields: [userID], references: [id])
  userID    String?
}

model RefreshToken {
  id        String   @id @unique @default(cuid())
  token     String   @unique
  userID    String
  user      User     @relation(fields: [userID], references: [id])
  expiresAt DateTime
}
